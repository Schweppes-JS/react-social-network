{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","style","item","id","avatar","massage","likesCount","maxLength300","maxLengthCreator","ReduxPostForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","Button","MyPosts","React","memo","postsElement","posts","map","post","key","message","styles","postsBlock","value","addPost","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","newPost","addPostActionCreator","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileInfo","profile","descriptionBlock","src","photos","large","alt","profilePhoto","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.7a565664.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__4BxUn\",\"posts\":\"MyPosts_posts__3q4MU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ZwIwL\",\"avatar\":\"Post_avatar__REdm0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__18G08\",\"profileImage\":\"ProfileInfo_profileImage__rr5o8\",\"profilePhoto\":\"ProfileInfo_profilePhoto__2haaf\"};","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <i id={style.avatar} className=\"fas fa-user-astronaut\"></i>\r\n            {props.massage}\r\n            <div>\r\n                <span>like{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post.jsx';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/required';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport Button from '../../common/Button/Button';\r\n\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst PostFrom = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name=\"post\"\r\n                    component={Textarea}\r\n                    validate={[required, maxLength300]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button>Add post</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxPostForm = reduxForm({\r\n    form: 'post'\r\n})(PostFrom);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElement = props.posts.map(post => <Post key={post.id} massage={post.message} likesCount={post.likesCount} />);\r\n\r\n    const createNewPost = (value) => {\r\n        props.addPost(value.post);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <ReduxPostForm onSubmit={createNewPost} />\r\n            <div className={styles.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;\r\n","import MyPosts from './MyPosts.jsx';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost));\r\n        }\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatus = props => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactiveteEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} onBlur={deactiveteEditMode} autoFocus={true} value={status}/>\r\n                    </div>\r\n                }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport style from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.descriptionBlock}>\r\n                <img\r\n                    src={profile.photos.large}\r\n                    alt=\"user avatar\"\r\n                    className={style.profilePhoto}\r\n                />\r\n                <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nexport class ProfileContainer extends Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Profile {...this.props}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}