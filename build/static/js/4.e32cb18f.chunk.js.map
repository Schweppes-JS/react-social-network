{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","style","dialog","active","to","name","Message","message","maxLentgth200","maxLengthCreator","ReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Button","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","key","messagesElements","messages","dialogsItems","value","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","newMessage","sendMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sFCYpMC,EATI,SAACC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACG,yBAAKC,UAAWC,IAAMC,OAAS,IAAMD,IAAME,QACxC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCCpBC,EANC,SAACT,GACd,OACG,yBAAKG,UAAWC,IAAMM,SAAUV,EAAMU,U,yCCMtCC,EAAgBC,YAAiB,KAoBjCC,EAAmBC,YAAU,CAAEC,KAAM,WAAlBD,EAlBF,SAACd,GACrB,OACG,0BAAMgB,SAAUhB,EAAMiB,cACnB,6BACG,kBAACC,EAAA,EAAD,CACGC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,qBACZC,SAAU,CAACC,IAAUZ,MAG3B,6BACG,kBAACa,EAAA,EAAD,kBAmCGC,EA3BC,SAACzB,GAEd,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAzB,GAAM,OAAI,kBAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMuB,IAAK1B,EAAOH,GAAIA,GAAIG,EAAOH,QACxG8B,EAAmBN,EAAMO,SAASH,KAAI,SAAApB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASqB,IAAKrB,EAAQR,QAMrG,OACG,yBAAKC,UAAWC,IAAMyB,SACnB,yBAAK1B,UAAWC,IAAM8B,cAClBN,GAEJ,yBAAKzB,UAAWC,IAAM6B,UACnB,6BACID,IAGP,kBAACnB,EAAD,CAAkBG,SAdF,SAACmB,GACpBnC,EAAMoC,YAAYD,EAAME,qB,wDCrCxBC,EAA6B,SAACZ,GAAD,MAAY,CAC3Ca,OAAQb,EAAMc,KAAKD,S,OCgBRE,sBACZC,aAfqB,SAAChB,GACtB,MAAO,CACJC,YAAaD,EAAMC,gBAIE,SAACgB,GACzB,MAAO,CACJP,YAAa,SAACQ,GACXD,EAASE,YAAyBD,UDRX,SAACE,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKhD,MAAMuC,OACT,kBAACO,EAAcE,KAAKhD,OADI,kBAAC,IAAD,CAAUO,GAAG,eAJT,GAEX0C,IAAMH,WAStC,OAFuCJ,YAAQJ,EAARI,CAAoCK,KCIhEN,CAGbhB","file":"static/js/4.e32cb18f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__hplg0\",\"dialogsItems\":\"Dialogs_dialogsItems__xQ5xn\",\"active\":\"Dialogs_active__1mUXY\",\"dialog\":\"Dialogs_dialog__t2K01\",\"messages\":\"Dialogs_messages__3ZjHm\",\"message\":\"Dialogs_message__sEBlA\"};","import React from 'react';\r\nimport style from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n   let path = \"/dialogs/\" + props.id;\r\n   return (\r\n      <div className={style.dialog + ' ' + style.active}>\r\n         <NavLink to={path}>{props.name}</NavLink>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport style from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n   return (\r\n      <div className={style.message}>{props.message}</div>\r\n   )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\n\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/required';\r\nimport Button from '../common/Button/Button';\r\n\r\nconst maxLentgth200 = maxLengthCreator(200);\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field\r\n               component={Textarea}\r\n               name=\"newMessageBody\"\r\n               placeholder=\"Ented your message\"\r\n               validate={[required, maxLentgth200]}\r\n            />\r\n         </div>\r\n         <div>\r\n            <Button>Send</Button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst ReduxMessageForm = reduxForm({ form: 'message' })(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n   let state = props.dialogsPage;\r\n\r\n   let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n   let messagesElements = state.messages.map(message => <Message message={message.message} key={message.id} />);\r\n\r\n   const addNewMessage = (value) => {\r\n      props.sendMessage(value.newMessageBody)\r\n   }\r\n\r\n   return (\r\n      <div className={style.dialogs}>\r\n         <div className={style.dialogsItems}>\r\n            {dialogsElements}\r\n         </div>\r\n         <div className={style.messages}>\r\n            <div>\r\n               {messagesElements}\r\n            </div>\r\n         </div>\r\n         <ReduxMessageForm onSubmit={addNewMessage} />\r\n      </div >\r\n   )\r\n}\r\n\r\n\r\nexport default Dialogs\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import Dialogs from './Dialogs';\r\n\r\nimport { sendMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage\r\n   };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      sendMessage: (newMessage) => {\r\n         dispatch(sendMessageActionCreator(newMessage));\r\n      }\r\n   };\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect\r\n)(Dialogs);;\r\n"],"sourceRoot":""}